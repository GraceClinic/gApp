{
	"id": "9a04b5c7-f360-5331-4f3c-726b8bcd689c",
	"name": "gApp_Assignment_3_Amit",
	"description": "Test cases for Game and Wordlist modules.\n\nBefore running these test cases make sure test data is imported from the file 20160714-1_update.sql located under the path\n\"C:\\webserver\\GIT\\gApp\\dev\\design output\\MySQL\\schema\\20160714-1_update.sql\"",
	"order": [],
	"folders": [
		{
			"id": "33d2f7da-49fa-5c3f-cdc2-415e8513b0ff",
			"name": "POST request to validate SubmitWord",
			"description": "Valid and Invalid arguments and properties are provided as an input along with POST request to verify the results.",
			"order": [
				"b962a730-6548-e7cd-3ff1-2557314e68cc",
				"4d9f0ff5-9647-8543-9201-9e27fd88f2af",
				"0af07dbd-6646-32b1-111b-7c683f7689a9",
				"e5709b95-60d0-4f16-cd96-96c1d3d235b4",
				"93ca4223-10f1-5f89-218f-a092c510374d",
				"579c8464-ecaf-7751-cb85-934e7ee96946",
				"5cce4b67-9d34-94fd-3c14-e3810e68ffad",
				"96da49c6-faaa-aebd-6be2-da3bb89faff7"
			],
			"owner": "550923",
			"collectionId": "9a04b5c7-f360-5331-4f3c-726b8bcd689c"
		}
	],
	"timestamp": 1468915225685,
	"owner": "550923",
	"public": false,
	"published": false,
	"requests": [
		{
			"id": "0af07dbd-6646-32b1-111b-7c683f7689a9",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Game/",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify error message\"] = data.message == \"POST Action does not include word property within model argument\";\ntests[\"Response code is 400\"] = responseCode.code === 400;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1469073011203,
			"name": "POST request without word property within model argument",
			"description": "Check the response when data property is not included in the model argument",
			"collectionId": "9a04b5c7-f360-5331-4f3c-726b8bcd689c",
			"responses": [],
			"rawModeData": "{\n    \"model\":{\n        \"id\":\"take\"\n    },\n    \"method\":\"submitWord\",\n    \"args\":{\n    },\n    \"noModel\":\"false\"\n}\n\n\n"
		},
		{
			"id": "4d9f0ff5-9647-8543-9201-9e27fd88f2af",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Game/",
			"preRequestScript": "postman.setEnvironmentVariable(\"currentWordGame\", (environment.dictGame.split(',')[environment.dictIndexGame]).trim());\n\nvar len = (environment.currentWordGame).length;\n\nswitch (len) {\n                case 2:\n                    postman.setEnvironmentVariable(\"currentWordPointsGame\", 2);\n                    break;\n                case 3:\n                    postman.setEnvironmentVariable(\"currentWordPointsGame\", 3);\n                    break;\n                case 4:\n                    postman.setEnvironmentVariable(\"currentWordPointsGame\", 5);\n                    break;\n                case 5:\n                    postman.setEnvironmentVariable(\"currentWordPointsGame\", 7);\n                    break;\n                case 6:\n                    postman.setEnvironmentVariable(\"currentWordPointsGame\", 9);\n                    break;\n                default:\n                    postman.setEnvironmentVariable(\"currentWordPointsGame\", len + 3);\n}",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify success\"] = data.results.success === true;\ntests[\"Verify message\"] = data.results.msg == \"Success!\";\ntests[\"Response code is 200\"] = responseCode.code === 200;\n\nvar j = 0;\nfor(var i = parseInt(environment.dictIndexGame); i >= 0, j <= parseInt(environment.dictIndexGame); i--,j++)\n{\n    tests[\"Verify word number \" + parseInt(parseInt(i) + parseInt(1))] = data.model.ScoreBoard[j].word == (environment.dictGame.split(',')[i]).trim();\n}\n\n    tests[\"Verify points for most recent word submitted\"] = data.model.ScoreBoard[0].points == environment.currentWordPointsGame;\n\npostman.setEnvironmentVariable(\"dictIndexGame\",parseInt(environment.dictIndexGame) + 1);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1469189844863,
			"name": "POST request with all the valid inputs",
			"description": "Provide valid word as an input and check if the submitted word exists and is not repeated",
			"collectionId": "9a04b5c7-f360-5331-4f3c-726b8bcd689c",
			"responses": [],
			"rawModeData": "{\n    \"model\":{\n        \"word\":\"{{currentWordGame}}\"\n    },\n    \"method\":\"submitWord\",\n    \"args\":{\n    },\n    \"noModel\":false\n}\n\n\n"
		},
		{
			"id": "579c8464-ecaf-7751-cb85-934e7ee96946",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Game/",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify success\"] = data.results.success === false;\ntests[\"Verify message\"] = data.results.msg == \"Duplicate!\";\ntests[\"Response code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1469190215188,
			"name": "POST request to validate duplicate word",
			"description": "If duplicate word is submitted by user msg will be 'Duplicate' and success is 'false'",
			"collectionId": "9a04b5c7-f360-5331-4f3c-726b8bcd689c",
			"responses": [],
			"rawModeData": "{\n    \"model\":{\n        \"word\":\"{{currentWordGame}}\"\n    },\n    \"method\":\"submitWord\",\n    \"args\":{\n    },\n    \"noModel\":false\n}\n"
		},
		{
			"id": "5cce4b67-9d34-94fd-3c14-e3810e68ffad",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Game/",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify success\"] = data.results.success === false;\ntests[\"Verify message\"] = data.results.msg == \"Rejected!\";\ntests[\"Response code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1469177899892,
			"name": "POST request to validate non-dictionary word",
			"description": "If any non-dictionary word is submitted, msg will be \"Rejected\" and success is set to false",
			"collectionId": "9a04b5c7-f360-5331-4f3c-726b8bcd689c",
			"responses": [],
			"rawModeData": "{\n    \"model\":{\n        \"word\":\"takeri\"\n    },\n    \"method\":\"submitWord\",\n    \"args\":{\n    },\n    \"noModel\":false\n}"
		},
		{
			"id": "93ca4223-10f1-5f89-218f-a092c510374d",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Game/",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify success\"] = data.results.success === false;\ntests[\"Verify message\"] = data.results.msg == \"Word too short!\";\ntests[\"Response code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1469177883185,
			"name": "POST request to validate word length",
			"description": "Minimum word length should be 2.\nIf not, success is false and msg is 'Word too short'",
			"collectionId": "9a04b5c7-f360-5331-4f3c-726b8bcd689c",
			"responses": [],
			"rawModeData": "{\n    \"model\":{\n        \"word\":\"a\"\n    },\n    \"method\":\"submitWord\",\n    \"args\":{\n    },\n    \"noModel\":false\n}\n\n\n"
		},
		{
			"id": "96da49c6-faaa-aebd-6be2-da3bb89faff7",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Game/",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify error message\"] = data.message == \"POST Action does not include word property within model argument\";\ntests[\"Response code is 400\"] = responseCode.code === 400;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1469177906777,
			"name": "POST request with no properties for model",
			"description": "Validate the response message when model argument is set empty",
			"collectionId": "9a04b5c7-f360-5331-4f3c-726b8bcd689c",
			"responses": [],
			"rawModeData": "{\n    \"model\":{\n    },\n    \"method\":\"submitWord\",\n    \"args\":{\n    },\n    \"noModel\":false\n}"
		},
		{
			"id": "b962a730-6548-e7cd-3ff1-2557314e68cc",
			"headers": "",
			"url": "http://www.gapp.com/WordShuffle/Game/?id=0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "postman.setEnvironmentVariable(\"dictIndexGame\",0);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1469191196553,
			"name": "http://www.gapp.com/WordShuffle/Game/?id=0",
			"description": "Resets the session varaible scoreBoard. This functionality is to support testing.",
			"collectionId": "9a04b5c7-f360-5331-4f3c-726b8bcd689c",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "e5709b95-60d0-4f16-cd96-96c1d3d235b4",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Game/",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify error message\"] = data.message == \"POST Action either does not include model argument or it is invalid\";\ntests[\"Response code is 400\"] = responseCode.code === 400;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1469177870994,
			"name": "POST request without model argument",
			"description": "Validate the results when model argument is not provided to POST request",
			"collectionId": "9a04b5c7-f360-5331-4f3c-726b8bcd689c",
			"responses": [],
			"rawModeData": "{\n    \"method\":\"submitWord\",\n    \"args\":{\n    },\n    \"noModel\":false\n}"
		}
	]
}