{
	"id": "4dab6a5a-d1ff-cfee-4cf4-13ab4d1b9e7e",
	"name": "Assignment 3",
	"description": "Thesse test cases are for assignment3, individual folders and files have their own description.",
	"order": [],
	"folders": [
		{
			"id": "4bdf008f-aaea-8d6e-6d75-e5a2ea2190ca",
			"name": "Test Cases for Login",
			"description": "The test cases checks for update operations in the db, a player can only update his records and that to if he is logged in, The test cases are in sequence => \n1. log you out of session (this feature is not fully implemented-> to be improved) \n2. update any record(should fail)\n3. try entering the db with wrong credentials(should fail)\n4. enter the db with right credentials (should pass, also note that the username is case insensitive while the secret is case sensitive, the user expects an output model, which doesn't include the \"secret\", while in the output model, the user gets a transitive property, challenges)\n5. The user updates his records(should pass)\n6. The user updates anothers' records(should fail)\n7. The user logs out(should pass)\n8. The user updates his records(should fail)",
			"order": [
				"d69c047c-7e5f-7c21-d369-291e1c207dcf",
				"1fb34bcd-dd27-594a-52c7-17861e2a714d",
				"76b7e8da-70f8-e111-cedd-e9e70c803110",
				"826c037c-f739-3b6e-5eea-135ea5c8982d",
				"6968bdf6-e963-66c3-07ef-77c38e4eac67",
				"dba18add-ce6a-10ed-a663-5e31fdd2a04e",
				"b8439522-e8b5-7a6d-fdaf-0e72adc69efe",
				"d62b13b7-9ea2-6497-c2df-0fce9e96f2ea",
				"2806eda9-f59d-17a9-590c-87b917bdd045",
				"72a33758-9def-5596-2eb7-39eb2626b6a2"
			],
			"owner": "791845"
		}
	],
	"timestamp": 1468924317545,
	"owner": "791845",
	"public": false,
	"published": false,
	"requests": [
		{
			"id": "1fb34bcd-dd27-594a-52c7-17861e2a714d",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Player/",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "PUT",
			"collectionId": "4dab6a5a-d1ff-cfee-4cf4-13ab4d1b9e7e",
			"data": [],
			"dataMode": "raw",
			"name": "Updating record, but not signed in",
			"description": "This is to check, if user can update any of the records if he/she is not logged in.\nRequirements:\nRequest Type: PUT\npass an id parameter in the model\nwith any update parameter.\nExpected Output:\n\"Not signed in\", unauthorized",
			"descriptionFormat": "html",
			"time": 1469500801803,
			"version": 2,
			"responses": [],
			"tests": "var data = JSON.parse(responseBody);\ntests[\"you are not signed In\"] = data.message == \"You are not signed In\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "4bdf008f-aaea-8d6e-6d75-e5a2ea2190ca",
			"rawModeData": "{\n    \"model\": {\n        \"id\": \"101\",\n        \"name\": \"Your New Updated Name\"\n    }\n}"
		},
		{
			"id": "2806eda9-f59d-17a9-590c-87b917bdd045",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Player/",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "4dab6a5a-d1ff-cfee-4cf4-13ab4d1b9e7e",
			"data": [],
			"dataMode": "raw",
			"name": "Logout again",
			"description": "Requirements:\nparameters:\nmethod: logout",
			"descriptionFormat": "html",
			"time": 1469503975690,
			"version": 2,
			"responses": [],
			"tests": "var data = JSON.parse(responseBody);\ntests[\"logged out\"] = data.message == \"logged out, session destroyed\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "4bdf008f-aaea-8d6e-6d75-e5a2ea2190ca",
			"rawModeData": "{\n    \"method\": \"logout\"\n}"
		},
		{
			"id": "6968bdf6-e963-66c3-07ef-77c38e4eac67",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Player/",
			"preRequestScript": "postman.setEnvironmentVariable(\"namePlayer_login\",\"ashish ranjan\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"idPlayer_login\",data.model.Id);\ntests[\"obtained name\"] = data.model.Name == environment.namePlayer_login;\ntests[\"transient challenges\"] = data.model.Challenges.length == 1 && Object.keys(data.model.Challenges[0]).length === 2;\ntests[\"id challenge\"] = new Date(data.model.CreateDate) instanceof Date && data.model.CreateDate.split(' ')[0].split('-')[2] == 1 + data.model.Id % 100;\ntests[\"modify date\"] = new Date(data.model.CreateDate) instanceof Date && data.model.CreateDate.split(' ')[0].split('-')[2] == 1 + data.model.Id % 100;\ntests[\"results\"] = data.results === true;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1469503747549,
			"name": "Model Obtained with right credentials",
			"description": "Requirements\nparaneters:\n\"method\": \"login\"\n\"args\": {\"name\": ..., \"secret\": ...}\n\nObtained Id to be set in the environment so could be used in next update test case.\n\nExpectation:\nmodel.challenges, model.id, model.name, model.idChallenge, model.createDate, model.modifyDate, results",
			"collectionId": "4dab6a5a-d1ff-cfee-4cf4-13ab4d1b9e7e",
			"responses": [],
			"rawModeData": "{\n    \"method\": \"login\",\n    \"args\": {\"name\": \"{{namePlayer_login}}\", \"secret\": \"Player1\"}\n}"
		},
		{
			"id": "72a33758-9def-5596-2eb7-39eb2626b6a2",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Player/",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "PUT",
			"collectionId": "4dab6a5a-d1ff-cfee-4cf4-13ab4d1b9e7e",
			"data": [],
			"dataMode": "raw",
			"name": "Accessing another's records ",
			"description": "Requirements:\nRequest Type: PUT\nparameters:\n1. model.id\n2. model.name\n",
			"descriptionFormat": "html",
			"time": 1469504162381,
			"version": 2,
			"responses": [],
			"tests": "var data = JSON.parse(responseBody);\ntests[\"not signed In\"] = data.message == \"You are not signed In\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "4bdf008f-aaea-8d6e-6d75-e5a2ea2190ca",
			"rawModeData": "{\n    \"model\":{\n        \"id\": {{idPlayer_login}},\n        \"name\": \"{{namePlayer_login}}\"\n    }\n}\n"
		},
		{
			"id": "76b7e8da-70f8-e111-cedd-e9e70c803110",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Player/",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "4dab6a5a-d1ff-cfee-4cf4-13ab4d1b9e7e",
			"data": [],
			"dataMode": "raw",
			"name": "Username doesn't  exist",
			"description": "Test if the user can login with unregistered usernames.\nRequirement:\nRequest type: POST\nparameters:\n1. \"method\" => login\n2. \"args\" => Json object containing name and secret keys\n\nThe user can try any random name, with any random secret.\n\nExpectations: If the random user name doesn't exist =>\n\"the username is not found in our database\"\n",
			"descriptionFormat": "html",
			"time": 1469501144398,
			"version": 2,
			"responses": [],
			"tests": "var data = JSON.parse(responseBody);\ntests[\"userName not found\"] = data.message == \"The username is not found in our database\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "4bdf008f-aaea-8d6e-6d75-e5a2ea2190ca",
			"rawModeData": "{\n    \"method\": \"login\",\n    \"args\": {\"name\": \"Ashish rajan\", \"secret\": \"Player1\"}\n}"
		},
		{
			"id": "826c037c-f739-3b6e-5eea-135ea5c8982d",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Player/",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "4dab6a5a-d1ff-cfee-4cf4-13ab4d1b9e7e",
			"data": [],
			"dataMode": "raw",
			"name": "Invalid secret",
			"description": "Expectation:\nRequest Type: pOST\nparameters: \n1. method => \"login\"\n2. args => \"{\"name\": [valid name], \"secret\": [invalid secret]}\"\n\nnote: if the user doesn't know a valid username and secret, he can try inserting a new record in the database, and then try this test case,\n{\n    \"model\": {\n        \"NO id\",\n        \"Necessary fields\"\n        \n    }\n}\nwith a PUT request\n\n",
			"descriptionFormat": "html",
			"time": 1469501319888,
			"version": 2,
			"responses": [],
			"tests": "var data = JSON.parse(responseBody);\ntests[\"wrong credentials\"] = data.message == \"the secret doesn't match\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "4bdf008f-aaea-8d6e-6d75-e5a2ea2190ca",
			"rawModeData": "{\n    \"method\": \"login\",\n    \"args\": {\"name\": \"Ashish ranjan\", \"secret\": \"Payer1\"}\n}"
		},
		{
			"id": "b8439522-e8b5-7a6d-fdaf-0e72adc69efe",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Player/",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\ntests[environment.namePlayer_login] = data.model.Name == environment.namePlayer_login;\ntests[\"player id\"] = data.model.Id == environment.idPlayer_login;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1469503712052,
			"name": "Update the name back to original",
			"description": "Requirements\nRequest Type: PUT\nparameters:\nmodel.id -> from environment\nmodel.name -> from environment",
			"collectionId": "4dab6a5a-d1ff-cfee-4cf4-13ab4d1b9e7e",
			"responses": [],
			"rawModeData": "{\n    \"model\":{\n        \"id\": {{idPlayer_login}},\n        \"name\": \"{{namePlayer_login}}\"\n    }\n}\n"
		},
		{
			"id": "d62b13b7-9ea2-6497-c2df-0fce9e96f2ea",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Player/",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "PUT",
			"collectionId": "4dab6a5a-d1ff-cfee-4cf4-13ab4d1b9e7e",
			"data": [],
			"dataMode": "raw",
			"name": "Updating another's records",
			"description": "Requirements:\nparameters:\n1. model.id -> id different from the id of the environmemnt\n2. model.name -> any name",
			"descriptionFormat": "html",
			"time": 1469503911751,
			"version": 2,
			"responses": [],
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Unauthorized access\"] = data.message == \"Accessing Unauthorized records\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "4bdf008f-aaea-8d6e-6d75-e5a2ea2190ca",
			"rawModeData": "{\n    \"model\":{\n        \"id\": 12,\n        \"name\": \"{{namePlayer_login}}\"\n    }\n}\n"
		},
		{
			"id": "d69c047c-7e5f-7c21-d369-291e1c207dcf",
			"headers": "",
			"url": "http://www.gapp.com/WordShuffle/Player/",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "4dab6a5a-d1ff-cfee-4cf4-13ab4d1b9e7e",
			"data": [],
			"dataMode": "raw",
			"name": "LogOut",
			"description": "This will destroy the session, \nRequirements:\nRequest Type: POST\nparameters:\n1. method: logout",
			"descriptionFormat": "html",
			"time": 1469500473178,
			"version": 2,
			"responses": [],
			"tests": "var data = JSON.parse(responseBody);\ntests[\"logged out\"] = data.message == \"logged out, session destroyed\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "4bdf008f-aaea-8d6e-6d75-e5a2ea2190ca",
			"rawModeData": "{\n    \"method\": \"logout\"\n}"
		},
		{
			"id": "dba18add-ce6a-10ed-a663-5e31fdd2a04e",
			"headers": "Content-Type: application/json\n",
			"url": "http://www.gapp.com/WordShuffle/Player/",
			"preRequestScript": "postman.setEnvironmentVariable(\"updatedNamePlayer_login\", \"you have a new name\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"tests": "var data = JSON.parse(responseBody);\ntests[environment.updatedNamePlayer_login] = data.model.Name == environment.updatedNamePlayer_login;\ntests[\"player id\"] = data.model.Id == environment.idPlayer_login;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1469503338844,
			"name": "Update The records for currently signed in user",
			"description": "requirements:\nRequest Type: PUT\nparameters:\nmodel.id -> from environment\nmodel.name\n\n\nExpectation:\n1. the returned model to contain the updated name\n2. The returned name to be saved in environment, so could be set back again to the original name.",
			"collectionId": "4dab6a5a-d1ff-cfee-4cf4-13ab4d1b9e7e",
			"responses": [],
			"rawModeData": "{\n    \"model\":{\n        \"id\": {{idPlayer_login}},\n        \"name\": \"You have a new Name\"\n    }\n}\n"
		}
	]
}